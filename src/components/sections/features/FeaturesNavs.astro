---
// Import the necessary dependencies
import TabNav from "@components/ui/blocks/TabNav.astro";
import TabContent from "@components/ui/blocks/TabContent.astro";
import Icon from "@components/ui/icons/Icon.astro";

// Define props from Astro
const { title, tabs } = Astro.props;

// Define TypeScript interface for tab object
interface Tab {
  heading: string;
  content: string;
  svg: string;
  src: any;
  alt: string;
  first?: boolean;
  second?: boolean;
}

// Define TypeScript interface for props
interface Props {
  title?: string;
  tabs: Tab[];
}
---

<section
  class="mx-auto max-w-[85rem] px-4 py-3 sm:px-6 lg:px-8 lg:py-4 2xl:max-w-full"
>
  <div class="relative p-4 md:p-8">
    <div
      class="relative z-10 flex flex-col items-center justify-center lg:grid lg:grid-cols-12 lg:items-center lg:gap-16"
    >
      <!-- Section's heading and tab navigation -->
      <div class="mb-10 lg:order-2 lg:col-span-5 lg:col-start-7 lg:mb-0 text-center lg:text-left">
        <h2
          class="text-2xl font-bold text-neutral-800 dark:text-neutral-200 sm:text-3xl mx-auto lg:mx-0 lg:pr-8"
        >
          <!-- About Fragment: https://docs.astro.build/en/basics/astro-syntax/#fragments -->
          <Fragment set:html={title} />
        </h2>
        <!-- Tab navigation - use the attribute 'first' in the first TabNav for the component to work -->
        <nav class="mt-5 grid gap-4 md:mt-10 max-w-md mx-auto lg:mx-0" aria-label="Tabs" role="tablist">
          {
            tabs.map((tab, index) => (
              <TabNav
                id={`tabs-with-card-item-${index + 1}`}
                dataTab={`#tabs-with-card-${index + 1}`}
                aria={`tabs-with-card-${index + 1}`}
                heading={tab.heading}
                content={tab.content}
                first={tab.first}
              >
                <Icon name={tab.svg} class="h-8 w-8 text-neutral-600 dark:text-white font-bold stroke-[2] hs-tab-active:text-orange-500 dark:hs-tab-active:text-orange-400" />
              </TabNav>
            ))
          }
        </nav>
      </div>

      <!-- Contents for each tab - the 'first' attribute should be used in the first tab for that tab to be initially visible, 'second' changes the styles -->
      <div class="lg:col-span-6 lg:col-start-1 flex justify-center items-center">
        <div class="relative">
          <div>
            {
              tabs.map((tab, index) => (
                <TabContent
                  id={`tabs-with-card-${index + 1}`}
                  aria={`tabs-with-card-item-${index + 1}`}
                  src={tab.src}
                  alt={tab.alt}
                  heading={tab.heading}
                  content={tab.content}
                  first={tab.first}
                  second={tab.second}
                />
              ))
            }
          </div>
        </div>
      </div>
    </div>

    <div class="absolute inset-0 flex justify-center items-center">
      <!-- Decorative background and sizing -->
      <div
        class="h-5/6 w-full max-w-6xl rounded-xl bg-neutral-100 dark:bg-white/[.075] sm:h-3/4 lg:h-full"
      >
      </div>
    </div>
  </div>
</section>
