---
// Import the necessary AccordionItem component and JSON data
import AccordionItem from "@components/ui/blocks/AccordionItem.astro";
import { Image } from "astro:assets";

// Define props from Astro
const { title, faqs, image } = Astro.props;

// Define TypeScript interface for props
interface Faq {
  question: string;
  answer: string;
}

interface FaqGroup {
  subTitle?: string;
  faqs: Faq[];
}

interface Props {
  title: string;
  faqs: FaqGroup;
  image?: ImageMetadata;
}
// Define a helper function to generate ids dynamically.
const makeId = (base: any, index: any) => `${base}${index + 1}`;
---

<!-- Main container that holds all content. Customized for different viewport sizes. -->
<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <div class="grid gap-8 md:grid-cols-2 lg:gap-12">
    <div class="flex flex-col justify-center h-full">
      {image && (
        <div class="relative overflow-hidden rounded-xl shadow-xl shadow-black/30 dark:shadow-xl dark:shadow-black/30 h-full">
          <!-- Borde interior decorativo -->
          <div class="absolute inset-4 border border-white/20 rounded-lg z-20 pointer-events-none"></div>
          
          <!-- Elementos decorativos en las esquinas -->
          <div class="absolute top-3 left-3 w-6 h-6 border-t-2 border-l-2 border-white/40 rounded-tl-lg z-20 pointer-events-none"></div>
          <div class="absolute top-3 right-3 w-6 h-6 border-t-2 border-r-2 border-white/40 rounded-tr-lg z-20 pointer-events-none"></div>
          <div class="absolute bottom-3 left-3 w-6 h-6 border-b-2 border-l-2 border-white/40 rounded-bl-lg z-20 pointer-events-none"></div>
          <div class="absolute bottom-3 right-3 w-6 h-6 border-b-2 border-r-2 border-white/40 rounded-br-lg z-20 pointer-events-none"></div>
          
          <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent z-10"></div>
          <Image
            src={image}
            alt="EstadÃ­sticas de servicio"
            class="h-full w-full object-cover transition duration-700 hover:scale-105"
            width={800}
            height={600}
            loading="lazy"
          />
          <div class="absolute bottom-0 right-0 p-6 z-30">
            <h2 class="text-xl font-bold text-white md:text-2xl md:leading-tight drop-shadow-md" style="text-shadow: 0 2px 4px rgba(0,0,0,0.5);">
              <Fragment set:html={title} />
            </h2>
          </div>
        </div>
      )}
    </div>
    <!-- FAQ accordion items -->
    <div class="h-full">
      <div
        class="hs-accordion-group divide-y divide-neutral-200 dark:divide-neutral-700 h-full"
      >
        {
          faqs.faqs.map((question, i) => {
            // Generate ids dynamically for each FAQ accordion item.
            let id = makeId(
              "hs-basic-with-title-and-arrow-stretched-heading-",
              i
            );
            let collapseId = makeId(
              "hs-basic-with-title-and-arrow-stretched-collapse",
              i
            );

            return (
              <AccordionItem
                {...question}
                id={id}
                collapseId={collapseId}
                first={i === 0}
              />
            );
          })
        }
      </div>
    </div>
  </div>
</section>