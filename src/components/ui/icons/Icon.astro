---
const { name, class: className, ...rest } = Astro.props;

// Importar los iconos de manera segura
let Icons;
try {
  Icons = await import("./icons.ts").then(module => module.Icons);
} catch (e) {
  Icons = {};
}

// Obtener el icono o un objeto vacío si no existe
let icon = (Icons && Icons[name]) || {};

// Obtener los paths o un array vacío si no existen
let paths = icon.paths || [];
---

{
  icon ? (
    <svg
      class={className || icon.class || ""}
      height={rest.height || icon.height || "24"}
      width={rest.width || icon.width || "24"}
      viewBox={icon.viewBox || "0 0 24 24"}
      fill={icon.fill || "none"}
      stroke={icon.stroke || "currentColor"}
      stroke-width={rest.strokeWidth || icon.strokeWidth || "1.5"}
      stroke-linecap={rest.strokeLinecap || icon.strokeLinecap || "round"}
      stroke-linejoin={rest.strokeLinejoin || icon.strokeLinejoin || "round"}
      {...rest}
    >
      {icon.title && <title>{icon.title}</title>}
      {paths.map((path) => (
        <path d={path.d} class={path.class || ""} />
      ))}
    </svg>
  ) : (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
      <circle cx="12" cy="12" r="10" />
      <line x1="8" y1="8" x2="16" y2="16" />
      <line x1="16" y1="8" x2="8" y2="16" />
    </svg>
  )
}
